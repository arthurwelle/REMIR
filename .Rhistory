knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
# Autor: Arthur Welle
# E-mail: arthurwelle@gmail.com
# clear global variables
rm(list=ls())
# carrega pacotes e funções criados
source("https://raw.githubusercontent.com/iedados/Publico/master/RScripts.R")
library(ggplot2)
library(sidrar)
library(plotly)
library(dplyr)
#Chama o CSS criado para o Cecon
htmltools::includeCSS("https://raw.githubusercontent.com/iedados/Publico/master/Styles_Cesit.css")
#chama a série no sidra
d1<-sidrar::get_sidra(api = "/t/6390/n1/all/v/5933/p/all") #rendimento real médio habitual de todos os trabalhos
View(d1)
d$data <- lubridate::yq(paste0(substr('Trimestre Móvel (Código)',3,6),substr('Trimestre Móvel (Código)',1,2) ))
#chama a série no sidra
d<-sidrar::get_sidra(api = "/t/6390/n1/all/v/5933/p/all") #rendimento real médio habitual de todos os trabalhos
#renomeia séries
d$Serie<-"Renda média"
d$data <- lubridate::yq(paste0(substr('Trimestre Móvel (Código)',3,6),substr('Trimestre Móvel (Código)',1,2) ))
View(d)
d$data <- lubridate::yq(paste0(substr('Trimestre Móvel (Código)',1,4),substr('Trimestre Móvel (Código)',5,6) ))
d$data <- lubridate::yq(paste0(substr(d$`Trimestre Móvel (Código)`,1,4),substr(d$`Trimestre Móvel (Código)`,5,6) ))
d$data <- lubridate::ymd(paste0(substr(d$`Trimestre Móvel (Código)`,1,4),substr(d$`Trimestre Móvel (Código)`,5,6), "01" ))
#cria gráfico ::ggplot
g0<- ggplot2::ggplot()  +
geom_line(aes(x=index(d), y=coredata(d[,9]), color = colnames(d)[1])) +
geom_vline(xintercept = as.numeric(as.Date("2017-11-11")), linetype="dotted", color = "black", size=1) +
labs(x = "", y = "R$") +
theme_classic() +
theme(panel.grid.major = element_line(colour="gray85", size=0.5)) +
theme(legend.title=element_blank())
g0
#cria gráfico ::ggplot
g0<- ggplot2::ggplot()  +
geom_line(aes(x=data), y=valor) +
geom_vline(xintercept = as.numeric(as.Date("2017-11-11")), linetype="dotted", color = "black", size=1) +
labs(x = "", y = "R$") +
theme_classic() +
theme(panel.grid.major = element_line(colour="gray85", size=0.5)) +
theme(legend.title=element_blank())
geom_line(data= d, aes(x=data, y=valor) +
geom_line(d, aes(x=data, y=valor) +
#cria gráfico ::ggplot
g0<- ggplot2::ggplot()  +
#cria gráfico ::ggplot
g0<- ggplot2::ggplot()  +
geom_line(d, aes(x=data, y=valor)) +
geom_vline(xintercept = as.numeric(as.Date("2017-11-11")), linetype="dotted", color = "black", size=1) +
labs(x = "", y = "R$") +
theme_classic() +
theme(panel.grid.major = element_line(colour="gray85", size=0.5)) +
theme(legend.title=element_blank())
g0
#cria gráfico ::ggplot
g0<- ggplot2::ggplot()  +
geom_line(d, aes(x=data, y=valor)) +
geom_vline(xintercept = as.numeric(as.Date("2017-11-11")), linetype="dotted", color = "black", size=1) +
labs(x = "", y = "R$") +
theme_classic() +
theme(panel.grid.major = element_line(colour="gray85", size=0.5))
g0<- ggplot2::ggplot()  +
geom_line(data = d, aes(x=data, y=valor))
g0
#cria gráfico ::ggplot
g0<- ggplot2::ggplot()  +
geom_line(data = d, aes(x=data, y=Valor)) +
geom_vline(xintercept = as.numeric(as.Date("2017-11-11")), linetype="dotted", color = "black", size=1) +
labs(x = "", y = "R$") +
theme_classic() +
theme(panel.grid.major = element_line(colour="gray85", size=0.5))
g0
#cria gráfico dinâmico ::plotly
g <- plotly::ggplotly(g0)%>%  logo_limpo()
# reforma a linha vertical (vline precisa ser o ultimo do ggplot acima)
g$x$data[[length(g$x$data[])]]$text <- "Reforma Trabalhista"
#chama o gráfico para aparecer na página
g
library(tidyverse)
d<-tidyquant::tq_get("PERMIT1",get="http://economic.data")
tibble(x=1:60)%>%
mutate(data=map(x,~d%>%
mutate(y=zoo::rollapply(d$price,.x,
mean,fill=NA))))%>%
unnest(data)%>%
ggplot(aes(x=date,y=y))+geom_line()+ gganimate::transition_states(x)
d<-tidyquant::tq_get("PERMIT1",get="http://economic.data")
install.packages("tidyquant")
d<-tidyquant::tq_get("PERMIT1",get="http://economic.data")
?tidyquant::tq_get
library(tidyverse)
d<-tidyquant::tq_get("PERMIT1",get="http://economic.data")
d<-tidyquant::tq_get("AAPL")
View(d)
tibble(x=1:60)%>%
mutate(data=map(x,~d%>%
mutate(y=zoo::rollapply(d$adjusted,.x,
mean,fill=NA))))%>%
unnest(data)%>%
ggplot(aes(x=date,y=y))+geom_line()+ gganimate::transition_states(x)
